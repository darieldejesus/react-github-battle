// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RepositoryProfile /> Repository profile is rendered correctly. 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="popular-item"
  >
    <h5
      className="popular-rank"
    >
      #
      2
    </h5>
    <img
      alt="Avatar for Profile Name"
      className="avatar"
      src="https://example.com/image.jpg"
    />
    <p>
      <a
        href="https://example.com/profilename"
      >
        Profile Name
      </a>
    </p>
    <p>
      @
      profilename
    </p>
    <p>
      10
       stars
    </p>
  </div>,
  "nodes": Array [
    <div
      className="popular-item"
    >
      <h5
        className="popular-rank"
      >
        #
        2
      </h5>
      <img
        alt="Avatar for Profile Name"
        className="avatar"
        src="https://example.com/image.jpg"
      />
      <p>
        <a
          href="https://example.com/profilename"
        >
          Profile Name
        </a>
      </p>
      <p>
        @
        profilename
      </p>
      <p>
        10
         stars
      </p>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <RepositoryProfile
        image="https://example.com/image.jpg"
        login="profilename"
        name="Profile Name"
        position={1}
        stars={10}
        url="https://example.com/profilename"
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "image": "https://example.com/image.jpg",
          "login": "profilename",
          "name": "Profile Name",
          "position": 1,
          "stars": 10,
          "url": "https://example.com/profilename",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="popular-item"
        >
          <h5
            className="popular-rank"
          >
            #
            2
          </h5>
          <img
            alt="Avatar for Profile Name"
            className="avatar"
            src="https://example.com/image.jpg"
          />
          <p>
            <a
              href="https://example.com/profilename"
            >
              Profile Name
            </a>
          </p>
          <p>
            @
            profilename
          </p>
          <p>
            10
             stars
          </p>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="popular-item"
        >
          <h5
            className="popular-rank"
          >
            #
            2
          </h5>
          <img
            alt="Avatar for Profile Name"
            className="avatar"
            src="https://example.com/image.jpg"
          />
          <p>
            <a
              href="https://example.com/profilename"
            >
              Profile Name
            </a>
          </p>
          <p>
            @
            profilename
          </p>
          <p>
            10
             stars
          </p>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <RepositoryProfile
    image="https://example.com/image.jpg"
    login="profilename"
    name="Profile Name"
    position={1}
    stars={10}
    url="https://example.com/profilename"
  />,
}
`;
